<?xml version="1.0"?>
<!--robot name="amr" xmlns:xacro="http://ros.org/wiki/xacro"-->
<robot>

    <gazebo reference="body_link">
        <gravity>true</gravity>
        <self_collide>false</self_collide>
    </gazebo>

    <gazebo reference="amr_caster_wheel_front_left_link">
        <gravity>true</gravity>
        <self_collide>false</self_collide>
        <material>Gazebo/Red</material>
    </gazebo>

    <gazebo reference="amr_caster_wheel_front_right_link">
        <gravity>true</gravity>
        <self_collide>false</self_collide>
        <material>Gazebo/Red</material>
    </gazebo>

    <gazebo reference="amr_caster_wheel_back_left_link">
        <gravity>true</gravity>
        <self_collide>false</self_collide>
        <material>Gazebo/Green</material>
    </gazebo>

    <gazebo reference="amr_caster_wheel_back_right_link">
        <gravity>true</gravity>
        <self_collide>false</self_collide>
        <material>Gazebo/Green</material>
    </gazebo>
    
    <gazebo reference="amr_fixed_upper_wheel_left_link">
        <gravity>true</gravity>
        <self_collide>false</self_collide>
        <material>Gazebo/Orange</material>
    </gazebo>

    <gazebo reference="amr_fixed_upper_wheel_right_link">
        <gravity>true</gravity>
        <self_collide>false</self_collide>
        <material>Gazebo/Orange</material>
    </gazebo>

    <gazebo reference="amr_fixed_wheel_left_link">
        <gravity>true</gravity>
        <self_collide>false</self_collide>
        <material>Gazebo/Blue</material>
    </gazebo>

    <gazebo reference="amr_fixed_wheel_right_link">
        <gravity>true</gravity>
        <self_collide>false</self_collide>
        <material>Gazebo/Blue</material>
    </gazebo>

    <!-- Lidar sensor -->
    <!-- <gazebo reference="laser_1_link">
        <material>Gazebo/Black</material>
        <sensor type="ray" name="laser_1_link">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>15</update_rate>

            <ray>
                <scan>
                    <horizontal>
                        <samples>819</samples>
                        <resolution>1</resolution>
                        <min_angle>-2.36</min_angle>
                        <max_angle>2.36</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.05</min>
                    <max>25.0</max>
                    <resolution>0.00575</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            
            <plugin name="laser_1_link" filename="libgazebo_ros_laser.so">
                <topicName>/scan_1</topicName>
                <frameName>laser_1_link</frameName>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="laser_2_link">
        <material>Gazebo/Black</material>
        <sensor type="ray" name="laser_2_link">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>15</update_rate>

            <ray>
                <scan>
                    <horizontal>
                        <samples>819</samples>
                        <resolution>1</resolution>
                        <min_angle>-2.36</min_angle>
                        <max_angle>2.36</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.05</min>
                    <max>25.0</max>
                    <resolution>0.00575</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>

            <plugin name="laser_2_link" filename="libgazebo_ros_laser.so">
                <topicName>/scan_2</topicName>
                <frameName>laser_2_link</frameName>
            </plugin>
        </sensor>
    </gazebo> -->

    <!-- IMU sensor -->  
    <gazebo reference="imu_link">
        <material>Gazebo/Orange</material>
        <gravity>true</gravity>
        <sensor name="imu_sensor" type="imu">
            <pose>0 0 0 0 0 0</pose>
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <topic>__default_topic__</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <topicName>/imu</topicName>
                <bodyName>imu_link</bodyName>
                <updateRateHZ>100.0</updateRateHZ>
                <gaussianNoise>0.005</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>imu_link</frameName>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo>
        <plugin name="ros_control" filename="libgazebo_ros_control.so">
            <legacyModeNS>false</legacyModeNS>
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
        </plugin>
    </gazebo>

    <!-- <gazebo>
        <plugin name="omni_amr_controller" filename="libgazebo_ros_planar_move.so">
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <odometryRate>20.0</odometryRate>
            
            <robotBaseFrame>body_link</robotBaseFrame>
        </plugin>
    </gazebo> -->

    <!-- Transmission -->
    <transmission name="amr_fixed_upper_wheel_left">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="amr_fixed_upper_wheel_left_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="amr_fixed_upper_wheel_left_motor">
        <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <transmission name="amr_fixed_upper_wheel_right">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="amr_fixed_upper_wheel_right_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="amr_fixed_upper_wheel_right_motor">
        <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <transmission name="amr_fixed_wheel_left">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="amr_fixed_wheel_left_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="amr_fixed_wheel_left_motor">
        <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <transmission name="amr_fixed_wheel_right">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="amr_fixed_wheel_right_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="amr_fixed_wheel_right_motor">
        <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <!-- camera -->
    <!--<gazebo reference="camera_link">
      <sensor type="camera" name="camera1">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type> -->
            <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
            <!--<mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera1</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>-->

</robot>


